default:
  image: lorisleiva/laravel-docker:latest

services:
  - mysql:latest

stages:
  - building
  - testing
  - deploying

variables:
  MYSQL_DATABASE: ci
  MYSQL_ROOT_PASSWORD: cipass

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - vendor/
    - .env

1-db-connection:
  stage: building
  image: mysql
  script:
    - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"
  only:
    - feature/migrate-crow-store

2-composer:
  stage: building
  needs: ["1-db-connection"]
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate
  only:
    - feature/migrate-crow-store

3-db-seeding:
  stage: building
  needs: ["2-composer"]
  services:
  - name: mysql:latest
    command: ["--default-authentication-plugin=mysql_native_password"]
  script:
    - mysql --version
    - php artisan migrate --path=database/migrations/crow_empty
    - php artisan migrate
    - php artisan migrate:fresh --seed
    - mysqldump --host=mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" "${MYSQL_DATABASE}" > db.sql
  artifacts:
    paths:
      - storage/logs # for debugging
      - db.sql
    expire_in: 1 days
    when: always
  only:
    - feature/migrate-crow-store

# 4-phpunit:
#   stage: testing
#   services:
#   - name: mysql:latest
#     command: ["--default-authentication-plugin=mysql_native_password"]
#   needs: ["3-db-seeding"]
#   script:
#     - php -v
#     - mysql --host=mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" "${MYSQL_DATABASE}" < db.sql
#     - ./vendor/phpunit/phpunit/phpunit --version
#     - php -d short_open_tag=off ./vendor/phpunit/phpunit/phpunit -v --colors=never --stderr
#   artifacts:
#     paths:
#       - ./storage/logs # for debugging
#     expire_in: 1 days
#     when: on_failure
#   only:
#     - master

5-integration-stores:
  stage: deploying
  needs: ["3-db-seeding"]
  script:
    - eval $(ssh-agent -s)
    - echo "$LARAVEL9_TOKEN" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan "$HOST" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git remote add production "$USERNAME"@"$HOST":/var/www/crow-enterprise.git
    - git remote -v
    - git status
    - git push -f production HEAD:feature/migrate-crow-store
  only:
    - feature/migrate-crow-store
  when: manual
6-normal-stores:
  stage: deploying
  needs: ["3-db-seeding"]
  script:
    - eval $(ssh-agent -s)
    - echo "$SECOND_LARAVEL9_TOKEN" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan "$SECOND_HOST" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git remote add production "$USERNAME"@"$SECOND_HOST":/var/www/crow-enterprise.git
    - git remote -v
    - git status
    # - git push -f production HEAD:feature/migrate-crow-store
  only:
    - feature/migrate-crow-store
  when: manual
